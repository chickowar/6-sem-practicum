version: '3.8'

services:
  #----------------------------------------------------------------------------------------#
  # KAFKA
  zookeeper:
    image: bitnami/zookeeper:3.9
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:3.6
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  kafka-init:
    image: bitnami/kafka:3.6
    depends_on:
      - kafka
    entrypoint: ["/bin/bash", "-c"]
    command: >
      "
      sleep 20;
      kafka-topics.sh --create --if-not-exists --bootstrap-server localhost:9092 --topic orchestrator_commands --partitions 1 --replication-factor 1;
      kafka-topics.sh --create --if-not-exists --bootstrap-server localhost:9092 --topic runner_commands --partitions 1 --replication-factor 1;
      "

  #----------------------------------------------------------------------------------------#
  # SCENARIOS DB
  scenarios-db:
    image: postgres:15
    container_name: scenarios-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: scenarios
    ports:
      - "5432:5432"
    volumes:
      - scenarios_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5


  #----------------------------------------------------------------------------------------#
  # PREDICTIONS DB
  predictions-db:
    image: postgres:15
    container_name: predictions-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: predictions
    ports:
      - "5433:5432"
    volumes:
      - predictions_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  scenarios_pgdata:
  predictions_pgdata:
